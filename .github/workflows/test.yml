name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  smart-contracts:
    name: Smart Contract Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: forge build --sizes

      - name: Run Forge tests
        run: forge test -vvv

      - name: Run Forge coverage
        run: forge coverage --report lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          flags: smart-contracts

  relayer:
    name: Relayer Service Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: bridge_relayer
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: relayer/package-lock.json

      - name: Install dependencies
        working-directory: ./relayer
        run: npm ci

      - name: Run linter
        working-directory: ./relayer
        run: npm run lint || echo "Linting not configured"

      - name: Build TypeScript
        working-directory: ./relayer
        run: npm run build

      - name: Run tests
        working-directory: ./relayer
        run: npm test || echo "Tests not configured"
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: bridge_relayer
          DB_USER: postgres
          DB_PASSWORD: postgres

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linter
        working-directory: ./frontend
        run: npm run lint || echo "Linting not configured"

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Run tests
        working-directory: ./frontend
        run: npm test || echo "Tests not configured"
